#INCLUDE "finr650.CH"
#Include "PROTHEUS.CH"   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para tratamento dos Sub-Totais por Ocorrencia  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE DESPESAS           3
#DEFINE DESCONTOS          4
#DEFINE ABATIMENTOS        5
#DEFINE VALORRECEBIDO      6			
#DEFINE JUROS              7
#DEFINE VALORIOF		   8
#DEFINE VALORCC			   9
#DEFINE VALORORIG		   10

Static lExecJob := ExecSchedule()
Static __aLayCNAB :={}
// 17/08/2009 - Compilacao para o campo filial de 4 posicoes
// 18/08/2009 - Compilacao para o campo filial de 4 posicoes

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FINR650  ³ Autor ³ Marcel Borges Ferreira ³ Data ³ 03/08/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impress„o do Retorno da Comunica‡„o Banc ria                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FinR650()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function XR650(aParam)

	Local oReport
	DEFAULT aParam := {}

	oReport:=ReportDef(aParam)
	If !lExecJob
		oReport:PrintDialog()
	Else
		oReport:lPreview	:= .F.
		oReport:Print()
	EndIF

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Marcel Borges Ferreira ³ Data ³ 17/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function ReportDef(aParam)
	Local oReport := Nil
	Local nI      := NIL
	Local cFile	  := ""
	Local cPath	  := ""
	Local nParam  := 0
	
	Default aParam := {}	//Modelo conteudo do array {{'MV_PAR01',Valor},{'MV_PAR02',Valor},{'MV_PARn',ValorN}}
	
	Pergunte("FIN650", .F., Nil, Nil, Nil, !lExecJob)
	
	If (nParam := Len(aParam)) > 0
		For nI := 1 To nParam
			If "MV_PAR" $ UPPER(aParam[nI,1])
				&(aParam[nI,1]) := aParam[nI,2]
			EndIf 
		Next nI
	EndIf
	
	oReport := TReport():New("FINR650",STR0004,"FIN650",{|oReport| ReportPrint(oReport)},STR0001+STR0002+STR0003)

	If lExecJob
		oReport:nDevice := 6
		
		cPath		:= ALLTRIM(GETMV('MV_RELT'))
		cFile	 	:= Substr(mv_par01,rat("\",mv_par01)+1,len(mv_par01))          
		cFile		:= Substr(cFile,1, rat(".",cFile)-1)
		If File(cPath+cFile+".PDF")
			FERASE(cPath+cFile+".PDF")
		Endif
		oReport:cFile := cFile
	EndIf
							
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿s
	//³  Secao 1 - Titulos a Receber   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	oSection1 := TRSection():New(oReport,STR0047)
	TRCell():New(oSection1,"SEC1_TIT",,STR0031,,25,,)
	TRCell():New(oSection1,"SEC1_CLI",,STR0032,,10,,)
	TRCell():New(oSection1,"SEC1_OCOR",,STR0033,,31,,)
	TRCell():New(oSection1,"SEC1_DTOCOR",,STR0034,,10,,)
	TRCell():New(oSection1,"SEC1_VORIG",,StrTran(STR0035," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VRECE",,StrTran(STR0036," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VPAGO",,StrTran(STR0037," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_DCOB" ,,StrTran(STR0038," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VDESC",,StrTran(STR0039," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VABAT",,StrTran(STR0040," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VJURO",,StrTran(STR0041," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_VIOF" ,,StrTran(STR0042," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_OCRED",,StrTran(STR0044," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"SEC1_DTCRED",,STR0045,,10,,)
	TRCell():New(oSection1,"SEC1_NTIT",,STR0043,,19,,)
	TRCell():New(oSection1,"SEC1_CONS",,STR0046,,26,,)
											
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³  Secao 3 - Subtotais  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	oSection2 := TRSection():New(oReport,STR0048)
	TRCell():New(oSection2,"STOT_TIT",,STR0027,,69,,)
	TRCell():New(oSection2,"STOT_VORIG",,StrTran(STR0035," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VRECE",,StrTran(STR0036," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VPAGO",,StrTran(STR0037," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_DCOB" ,,StrTran(STR0038," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VDESC",,StrTran(STR0039," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VABAT",,StrTran(STR0040," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VJURO",,StrTran(STR0041," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_VIOF" ,,StrTran(STR0042," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")
	TRCell():New(oSection2,"STOT_OCRED",,StrTran(STR0044," ",CRLF),"@E 99999,999.99",12,,,"RIGHT",,"RIGHT")


	oSection2:SetHeaderSection(.T.)
	oReport:SetLandScape()

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrint³ Autor ³Marcel Borges Ferreira ³ Data ³ 23/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportPrint devera ser criada para todos os³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function ReportPrint(oReport)
Local oSection1 := oReport:Section(1)
Local oSection2 := oReport:Section(2)
Local cPosPrin,cPosJuro,cPosMult,cPosCC ,cPosTipo
Local cPosNum ,cPosData,cPosDesp,cPosDesc,cPosAbat,cPosDtCC,cPosIof,cPosOcor 
Local cPosNosso, cPosForne, cPosCgc
Local lPosNum  := .f. , lPosData := .f. , lPosAbat := .f.
Local lPosDesp := .f. , lPosDesc := .f. , lPosMult := .f.
Local lPosPrin := .f. , lPosJuro := .f. , lPosDtCC := .f.
Local lPosOcor := .f. , lPosTipo := .f. , lPosIof  := .f.
Local lPosCC   := .f. , lPosNosso:= .f. , lPosRej	:= .f.
Local lPosForne:=.f. , lPosCgc := .F. 
Local nLidos ,nLenNum  ,nLenData ,nLenDesp ,nLenDesc ,nLenAbat ,nLenDtCC, nLenCGC
Local nLenPrin ,nLenJuro ,nLenMult ,nLenOcor ,nLenTipo ,nLenIof  ,nLenCC
Local nLenRej := 0
Local cArqConf ,cArqEnt 
Local lOcorr := .F.
Local cDescr
Local cDescr2 
LOCAL cEspecie,cData,nTamArq,cForne,cCgc
Local nValIof	:= 0
Local nHdlBco  := 0
Local nHdlConf := 0
Local cTabela 	:= "17"
Local lRej := .f.
Local cCarteira
Local nTamDet
Local lHeader := .f.
Local lProcessa := .T.
Local aTabela 	:= {}
Local cChave650
Local nPos := 0
Local lAchouTit := .F.
Local nValPadrao := 0
Local aValores := {}
LOCAL lF650Var := ExistBlock("F650VAR" ) 
LOCAL dDataFin := Getmv("MV_DATAFIN")
Local lOk
Local x
Local nCntOco  := 0
Local aCntOco  := {}
Local cCliFor	:= "  "
Local lFr650Fil:= ExistBlock("FR650FIL") 
Local nValOrig	:= 0
Local nTamPre	:= TamSX3("E1_PREFIXO")[1]
Local nTamNum	:= TamSX3("E1_NUM")[1] 
Local nTamPar	:= TamSX3("E1_PARCELA")[1]
Local nTamTit	:= nTamPre+nTamNum+nTamPar
Local nTamForn	:= Tamsx3("E2_FORNECE")[1]
Local lPrint := .T.
Local nTit
Local nVOrig            
Local nVReceb
Local nDCOB
Local nVDESC
Local nVABAT
Local nVJURO
Local nVIOF
Local nOCRED
Local cChave 	:= ""
Local cDestino  := ""
Local cBarra    := If(isSrvUnix(),"/","\")
Local cFileName := ""
Local aFile		:= {}
Local aArqConf	:= {}		// Atributos do arquivo de configuracao
Local aSE1_SE2	:= {}
Local cLocRec 	:= SuperGetMV( "MV_LOCREC" , .F. , " " )
Local lBarra    := isSrvUnix()
Local cCamArq	:= ""
Local lCadBco   := .T.
Local lF430TXBX := ExistBlock("F430TXBX")
Local nTxMoeda  := 0
Local aTitulo   := {}
Local aAreaSE2  := {}
Local cTipoReg  := ""
Local lGEMBaixa := ExistTemplate("GEMBaixa")
Local nArray    := 1
Local aPosicoes := {}
Local cIDTran   := ""

nLenOcor   := 0
cPosOcor   := ""

PRIVATE m_pag , cbtxt , cbcont , li 

//Essas variaveis tem que ser private para serem manipuladas
//nos pontos de entrada, assim como eh feito no FINA200
Private cNumTit
Private dBaixa
Private cTipo
Private cNossoNum
Private nDespes	:= 0
Private nDescont	:= 0
Private nAbatim	:= 0
Private nValrec	:= 0
Private nJuros	:= 0
Private nMulta	:= 0
Private nValCc	:= 0
Private dCred
Private cOcorr
Private xBuffer
	
If mv_par08 == 3 .and. mv_par07 == 2
	HELP(' ',1,"Aviso" ,,STR0060,2,0,,,,,, {STR0061}) //"O uso da pergunta 'Configuração CNAB ?' = Modelo PIX é permitida apenas para a carteira Receber."  "Para o uso da carteira Pagar, utilize a opçao Modelo 1 ou Modelo 2."
	Return .F.
Endif

// Guarda area do contas a receber ou contas a pagar				
aSE1_SE2 := Iif(mv_par07 == 1, SE1->(GetArea()), SE2->(GetArea()))

oReport:SetTitle(STR0004+' - '+mv_par01)		//"Impressao do Retorno da Comunicacao Bancaria"

dbSelectArea("SEE")
If !lExecJob
	lCadBco := SEE->(DbSeek(xFilial("SEE")+mv_par03+mv_par04+mv_par05+mv_par06))
EndIf

If mv_par08 == 3 .And. SEE->EE_NRBYTES <> 750 .And. lCadBco
	HELP(' ',1,"NRBYTESPIX" ,,STR0067,2,0,,,,,, {STR0068}) //"A sub-conta definida nos parâmetros possui o Número de Bytes (EE_NRBYTES) diferente de 750." "Para a utilização do relatório com layout PIX é necessario configurar no cadastro de Parâmetros Bancos (FINA130) o campo Número Bytes (EE_NRBYTES) = 750"
	Return .F.
Endif

If !lCadBco
	Set Device To Screen
	Set Printer To
	Help(" ",1,"NOBCOCAD")
	Return .F.
Endif

//Busca tamanho do detalhe na configuraçãodo banco
If mv_par08 == 3
	nTamDet := Iif(Empty(SEE->EE_NRBYTES), 750, SEE->EE_NRBYTES)
Else
	nTamDet := Iif(Empty(SEE->EE_NRBYTES), 400, SEE->EE_NRBYTES)
EndIf

nTamDet += 2
cTabela := Iif( Empty(SEE->EE_TABELA), "17" , SEE->EE_TABELA )

dbSelectArea( "SX5" )
If !SX5->( dbSeek( cFilial + cTabela ) )
	Help(" ",1,"PAR150")
   Return .F.
Endif

While !SX5->(Eof()) .and. SX5->X5_TABELA == cTabela
	AADD(aTabela, {Alltrim(X5Descri()), Pad(SX5->X5_CHAVE, Len(IIF(mv_par07 == 1, SE1->E1_TIPO, SE2->E2_TIPO)))}) 
	SX5->(dbSkip( ))
Enddo               

If (mv_par08 == 1 .Or. mv_par08 == 3)
	//Abre arquivo de configuração
	cArqConf := mv_par02
	
	If !FILE(cArqConf)
		Set Device To Screen
		Set Printer To
		Help(" ",1,"NOARQPAR")
		Return .F.
	EndIf
	
	nHdlConf := FOPEN(cArqConf, 0+64)
	
	//Ler arquivo de configuração
	nLidos := 0
	FSEEK(nHdlConf, 0, 0)
	nTamArq := FSEEK(nHdlConf, 0, 2)
	FSEEK(nHdlConf, 0, 0)
	
	If mv_par08 == 3		
		aPosicoes := FinCnabPix(nHdlConf, nTamArq)
		
		If !(Len(aPosicoes) >= 2 .And. Len(aPosicoes[1]) >= 12 .And. Len(aPosicoes[2]) >= 11)
			Help(" ", 1, "ARQCONFPIX", Nil, STR0069, 2, 0, Nil, Nil, Nil, Nil, Nil, {})
			FwFreeArray(aPosicoes)
			Return .F.	
		EndIf
	Else
		While nLidos <= nTamArq
			//Verifica o tipo de qual registro foi lido
			xBuffer := Space(85)
			FREAD(nHdlConf, @xBuffer, 85)
			
			If mv_par07 == 1 .And. MV_PAR08 == 1 .And. Upper(SubStr(xBuffer, 2, 9)) $  "CHAVE PIX"
				Help(' ', 1, "AVISO", Nil, STR0066, 1, 0)
				Return .F.
			ElseIf  MV_PAR08 == 1 .And. (".2RR" $ cArqConf) .OR. (".2PR" $ cArqConf)
				HELP(' ', 1, "AVISO", Nil, STR0062, 2, 0, Nil, Nil, Nil, Nil, Nil, {STR0063})
				Return .F.	
			EndIf
			
			If SubStr(xBuffer, 1, 1) == CHR(1)
				nLidos += 85
				Loop
			EndIf
			
			IF !lPosNum
				cPosNum:=Substr(xBuffer,17,10)
				nLenNum:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosNum:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosData
				cPosData:=Substr(xBuffer,17,10)
				nLenData:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosData:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosDesp
				cPosDesp:=Substr(xBuffer,17,10)
				nLenDesp:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosDesp:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosDesc
				cPosDesc:=Substr(xBuffer,17,10)
				nLenDesc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosDesc:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosAbat
				cPosAbat:=Substr(xBuffer,17,10)
				nLenAbat:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosAbat:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosPrin
				cPosPrin:=Substr(xBuffer,17,10)
				nLenPrin:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosPrin:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosJuro
				cPosJuro:=Substr(xBuffer,17,10)
				nLenJuro:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosJuro:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosMult
				cPosMult:=Substr(xBuffer,17,10)
				nLenMult:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosMult:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosOcor
				cPosOcor:=Substr(xBuffer,17,10)
				nLenOcor:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosOcor:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosTipo
				cPosTipo:=Substr(xBuffer,17,10)
				nLenTipo:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosTipo:=.t.
				nLidos+=85
				Loop
			EndIF
			
			If mv_par07 == 1 // Somente cart receber deve ler estes campos
				IF !lPosIof
					cPosIof:=Substr(xBuffer,17,10)
					nLenIof:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
					lPosIof:=.t.
					nLidos+=85
					Loop
				EndIF
				IF !lPosCC
					cPosCC:=Substr(xBuffer,17,10)
					nLenCC:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
					lPosCC:=.t.
					nLidos+=85
					Loop
				EndIF
				IF !lPosDtCc
					cPosDtCc:=Substr(xBuffer,17,10)
					nLenDtCc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
					lPosDtCc:=.t.
					nLidos+=85
					Loop
				EndIF
			EndIf	
		
			IF !lPosNosso
				cPosNosso:=Substr(xBuffer,17,10)
				nLenNosso:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosNosso:=.t.
				nLidos+=85
				Loop
			EndIF
			
			IF !lPosRej
				cPosRej:=Substr(xBuffer,17,10)
				nLenRej:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
				lPosRej:=.t.
				nLidos+=85
				Loop
			EndIF
			
			If mv_par07 == 2
				IF !lPosForne
					cPosForne := Substr(xBuffer,17,10)
					nLenForne := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
					lPosForne := .t.
					nLidos += 85
					Loop
				EndIF
				IF !lPosCgc
					cPosCgc   := Substr(xBuffer,17,10)
					nLenCgc   := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
					lPosCgc   := .t.
					nLidos += 85
					Loop
				EndIF
			Endif
			Exit
		EndDo
	EndIf
	
	//Fecha arquivo de configuracao
	Fclose(nHdlConf)
Endif

MV_PAR01 := Alltrim(MV_PAR01)
cLocRec  := Alltrim(cLocRec)

//Verifica se o arquivo de entrada esta na maquina local, e se estiver copia para o servidor
If Substr(mv_par01,2,2)== ":"+cBarra
	aFile := Directory(Alltrim(mv_par01))
	If Empty(aFile)
		Help(" ",1,"NOARQENT")
		Return .F.
	Else	
		cFileName := aFile[1][1]
		cDestino := GetSrvProfString("StartPath","")+If(Right(GetSrvProfString("StartPath",""),1) == cBarra,"",cBarra)+"CNABTmp"
		If !File(cDestino)
			MAKEDIR(cDestino)
		EndIf
		If CpyT2S(mv_par01,cDestino,.T.)
			cArqEnt := cDestino+cBarra+cFileName
		Else
			Help(" ",1,"F650COPY",,STR0049,1,0) //"Não foi possível copiar o arquivo de entrada para o servidor. O arquivo será processado a partir da máquina local, para um melhor desempenho, copie o arquivo diretamente no servidor."
		EndIf
	EndIf
Else
	If Empty(cLocRec)	
		If File(MV_PAR01)
			cArqEnt := MV_PAR01
		Else
			Help( Nil, Nil, STR0056, Nil , STR0057 + MV_PAR01 + ", " + STR0059 , 1, 0 )  //"Arquivo não Encontrado" # "O arquivo " #  " "Informado no caminho " # "não foi localizado. Favor verificar"
			Return .F.
		Endif
	Else
		If AT("/", MV_PAR01) > 0 .Or. AT("\", MV_PAR01) > 0 .Or. AT(":", MV_PAR01) > 0
			If File(MV_PAR01)
				cArqEnt := MV_PAR01
			Else
				cCamArq  := cLocRec + MV_PAR01
				If File(cCamArq)
					cArqEnt := cCamArq
				Else
					Help( Nil, Nil, STR0056, Nil , STR0057 + MV_PAR01 + "," + STR0058 + cCamArq + STR0059 , 1, 0 )  //"Arquivo não Encontrado" # "O arquivo " #  " "Informado no caminho " # "não foi localizado. Favor verificar"
					Return .F.
				Endif
			Endif
		Else
			If ! SubStr(cLocRec, Len(cLocRec), 1 ) $ "/|\|"
				If lBarra
					cLocRec := cLocRec + "/"
				Else
					cLocRec := cLocRec + "\"
				Endif
			Endif
			
			cCamArq  := cLocRec + MV_PAR01
			If File(cCamArq)
				cArqEnt := cCamArq
			Else
				If !lExecJob
					Help( Nil, Nil, STR0056, Nil , STR0057 + MV_PAR01 + "," + STR0058 + cCamArq + STR0059 , 1, 0 )  //"Arquivo não Encontrado" # "O arquivo " #  " "Informado no caminho " # "não foi localizado. Favor verificar"
					Return .F.
				Else
					Return .F.
				Endif
			Endif
		Endif
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abre arquivo enviado pelo banco ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !FILE(cArqEnt)
	Set Device To Screen
	Set Printer To
	Help(" ",1,"NOARQENT")
	Return .F.
Else
	nHdlBco:=FOPEN(cArqEnt,0+64)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Lˆ arquivo enviado pelo banco ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nLidos:=0
FSEEK(nHdlBco,0,0)
nTamArq:=FSEEK(nHdlBco,0,2)
FSEEK(nHdlBco,0,0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Valores da Secao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection1:Cell("SEC1_TIT"):SetBlock({||cNumTit+' '+cEspecie})
oSection1:Cell("SEC1_CLI"):SetBlock({||cCliFor})
oSection1:Cell("SEC1_OCOR"):SetBlock({||Subs(cDescr,1,26)})
oSection1:Cell("SEC1_DTOCOR"):SetBlock({||dBaixa})
oSection1:Cell("SEC1_VORIG"):SetBlock({||nValOrig})
oSection1:Cell("SEC1_DCOB"):SetBlock({||nDespes})
oSection1:Cell("SEC1_VDESC"):SetBlock({||nDescont})
oSection1:Cell("SEC1_VABAT"):SetBlock({||nAbatim})
oSection1:Cell("SEC1_VJURO"):SetBlock({||(nJuros+nMulta)})
oSection1:Cell("SEC1_NTIT"):SetBlock({||Pad(cNossoNum,19)})
oSection1:Cell("SEC1_CONS"):SetBlock({||cDescr2})
                                         
oSection2:Cell("STOT_TIT"):SetBlock({||nTit})
oSection2:Cell("STOT_VORIG"):SetBlock({||nVOrig})

oSection2:Cell("STOT_DCOB"):SetBlock({||nDCOB})
oSection2:Cell("STOT_VDESC"):SetBlock({||nVDESC})
oSection2:Cell("STOT_VABAT"):SetBlock({||nVABAT})
oSection2:Cell("STOT_VJURO"):SetBlock({||nVJURO})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Totalizador                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

TRFunction():New (oSection2:Cell("STOT_VORIG"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
TRFunction():New (oSection2:Cell("STOT_DCOB"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
TRFunction():New (oSection2:Cell("STOT_VDESC"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
TRFunction():New (oSection2:Cell("STOT_VABAT"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
TRFunction():New (oSection2:Cell("STOT_VJURO"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)

If mv_par07 == 1
	oSection1:Cell("SEC1_VPAGO"):Disable()            
	oSection2:Cell("STOT_VPAGO"):Disable()
	
	oSection1:Cell("SEC1_VIOF"):SetBlock({||nValIof})
	oSection1:Cell("SEC1_OCRED"):SetBlock({||nValCc})
	oSection1:Cell("SEC1_DTCRED"):SetBlock({||If(Empty(dCred),dDataBase,dCred)})
   
	oSection1:Cell("SEC1_VRECE"):SetBlock({||nValRec})
	oSection2:Cell("STOT_VIOF"):SetBlock({||nVIOF})
	oSection2:Cell("STOT_OCRED"):SetBlock({||nOCRED})
	oSection2:Cell("STOT_VRECE"):SetBlock({||nVReceb})
	
	TRFunction():New (oSection2:Cell("STOT_VIOF"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
	TRFunction():New (oSection2:Cell("STOT_OCRED"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
	TRFunction():New (oSection2:Cell("STOT_VRECE"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
Else                                      
	oSection1:Cell("SEC1_VRECE"):Disable()
	oSection1:Cell("SEC1_VIOF"):Disable()
	oSection1:Cell("SEC1_OCRED"):Disable()
	oSection1:Cell("SEC1_DTCRED"):Disable()
	oSection2:Cell("STOT_VIOF"):Disable()
	oSection2:Cell("STOT_OCRED"):Disable()
	oSection2:Cell("STOT_VRECE"):Disable()	

	oSection1:Cell("SEC1_VPAGO"):SetBlock({||nValRec})
	oSection2:Cell("STOT_VPAGO"):SetBlock({||nVReceb})
	
	TRFunction():New (oSection2:Cell("STOT_VPAGO"),,"SUM",,,"@E 99999,999.99",,.F.,.T.)
EndIf

//Carrega atributos do arquivo de configuracao
aArqConf := Directory(mv_par02)
oReport:SetTotalText(STR0023)
oReport:SetTotalinLine(.F.)
oReport:SetMeter(nTamArq/nTamDet)

oSection1:Init()
While (nTamArq-nLidos) >= nTamDet
	If oReport:Cancel() .And. oReport:Cancel()
		Exit
	EndIf
	
	lRej      := .F.
	lProcessa := .T.
	
	If mv_par08 == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tipo qual registro foi lido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		xBuffer:=Space(nTamDet)
		FREAD(nHdlBco,@xBuffer,nTamDet)

		oReport:IncMeter()

		IF !lHeader
			nLidos+=nTamDet
			lHeader := .t.
			Loop
		EndIF

		IF	SubStr(xBuffer,1,1) == "0" .or. SubStr(xBuffer,1,1) == "9" .or. ;
			SubStr(xBuffer,1,1) == "8" .or. SubStr(xBuffer,1,1) == "5"
			nLidos+=nTamDet
			Loop
		EndIF

		If SubStr(xBuffer,1,1) $ "1#F#J#7#2" .or. Substr(xBuffer,1,3) == "001"
			nDespes :=0
			nDescont:=0
			nAbatim :=0
			nValRec :=0
			nJuros  :=0
			nMulta  :=0
			If mv_par07 == 1						// somente carteira receber
				nValIof :=0
				nValCc  :=0
				dCred   :=ctod("  /  /  ")			
			Else
				cCgc := " "
			EndIf	
			cData   :=""
			dBaixa  :=ctod("  /  /  ")
			cEspecie:="  "
			cNossoNum:=Space(15)
			cForne:= Space(8)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lˆ os valores do arquivo Retorno ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF !Empty(cPosDesp)
				nDespes:=Val(Substr(xBuffer,Int(Val(Substr(cPosDesp,1,3))),nLenDesp))/100
			EndIF
			IF !Empty(cPosDesc)
				nDescont:=Val(Substr(xBuffer,Int(Val(Substr(cPosDesc,1,3))),nLenDesc))/100
			EndIF
			IF !Empty(cPosAbat)
				nAbatim:=Val(Substr(xBuffer,Int(Val(Substr(cPosAbat,1,3))),nLenAbat))/100
			EndIF
			IF !Empty(cPosPrin)
				nValRec :=Val(Substr(xBuffer,Int(Val(Substr(cPosPrin,1,3))),nLenPrin))/100
			EndIF
			IF !Empty(cPosJuro)
				nJuros  :=Val(Substr(xBuffer,Int(Val(Substr(cPosJuro,1,3))),nLenJuro))/100
			EndIF
			IF !Empty(cPosMult)
				nMulta  :=Val(Substr(xBuffer,Int(Val(Substr(cPosMult,1,3))),nLenMult))/100
			EndIF
			IF !Empty(cPosIof)
				nValIof :=Val(Substr(xBuffer,Int(Val(Substr(cPosIof,1,3))),nLenIof))/100
			EndIF
			IF !Empty(cPosCc)
				nValCc :=Val(Substr(xBuffer,Int(Val(Substr(cPosCc,1,3))),nLenCc))/100
			EndIF
			IF !Empty(cPosNosso)
				cNossoNum :=Substr(xBuffer,Int(Val(Substr(cPosNosso,1,3))),nLenNosso)
			EndIF			
			IF !Empty(cPosForne)
				cForne  :=Substr(xBuffer,Int(Val(Substr(cPosForne,1,3))),nLenForne)
			Endif
			If !Empty(cPosCgc)
				cCgc  :=Substr(xBuffer,Int(Val(Substr(cPosCgc,1,3))),nLenCgc)
			Endif

			cDescr  := ""
			cNumTit :=Substr(xBuffer,Int(Val(Substr(cPosNum, 1,3))),nLenNum )
			
			If Empty(cNumTit) .And. nValRec <= 0
				nLidos += nTamDet
				Loop
			Endif
			
			dBaixa  := dDataBase
			cData := Substr(xBuffer,Int(Val(Substr(cPosData,1,3))),nLenData)
			
			If !Empty(cData)
				cData   := ChangDate(cData, SEE->EE_TIPODAT)
				dBaixa  := Ctod(Substr(cData, 1, 2) + "/" + Substr(cData, 3, 2) + "/" + Substr(cData, 5), "ddmm" + Replicate("y", Len(Substr(cData,5))))
			EndIf
			
			cTipo   :=Substr(xBuffer,Int(Val(Substr(cPosTipo, 1,3))),nLenTipo )
			cTipo   := Iif(Empty(cTipo),"NF ",cTipo)		// Bradesco
			
			IF !Empty(cPosDtCc)
				cData :=Substr(xBuffer, Int(Val(Substr(cPosDtCc, 1, 3))), nLenDtCc)
				dCred := Ctod(Substr(cData, 1, 2) + "/" + Substr(cData, 3, 2) + "/" + Iif(nLenDtCc > 7, Substr(cData, 7, 2), Substr(cData, 5, 2)), "ddmmyy")
			EndIF
			
			If nLenOcor == 2
				cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor) + " "
			Else
				cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor)
			EndIf	
			
			If nLenRej > 0
				cRej	:= Substr(xBuffer,Int(Val(Substr(cPosRej,1,3))),nLenRej)
			EndIf	

			lOk := .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ o array aValores ir  permitir ³
			//³ que qualquer exce‡„o ou neces-³
			//³ sidade seja tratado no ponto  ³
			//³ de entrada em PARAMIXB        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			// Estrutura de aValores
			//	Numero do T¡tulo	- 01
			//	data da Baixa		- 02
			// Tipo do T¡tulo		- 03
			// Nosso Numero		- 04
			// Valor da Despesa	- 05
			// Valor do Desconto	- 06
			// Valor do Abatiment- 07
			// Valor Recebido    - 08
			// Juros					- 09
			// Multa					- 10
			// Valor do Credito	- 11
			// Data Credito		- 12
			// Ocorrencia			- 13
			// Linha Inteira		- 14

			aValores := ( { cNumTit, dBaixa, cTipo, cNossoNum, nDespes, nDescont, nAbatim, nValRec, nJuros, nMulta, nValCc, dCred, cOcorr, xBuffer })

			// Template GEM
			If lF650Var
				ExecBlock("F650VAR",.F.,.F.,{aValores})
			ElseIf ExistTemplate("GEMBaixa")
				ExecTemplate("GEMBaixa",.F.,.F.,)
			Endif
		
			If !Empty(cTipo)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica especie do titulo    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))})
				If nPos != 0
					cEspecie := aTabela[nPos][2]
				Else
					cEspecie	:= "  "
				EndIf								
				If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
					nLidos+=nTamDet
					Loop
				Endif

				//Busca por IDCNAB sem filial no indice
				lAchouTit := .F.
				dbSelectArea(IIF(mv_par07==1,"SE1","SE2"))
				dbSetOrder(IIF(mv_par07==1,19,13))
				cChave := Substr(cNumTit,1,10)

				If !Empty(cNumTit) .And. MsSeek(cChave)
					If ( mv_par07 == 1 )
						cEspecie  := SE1->E1_TIPO
					Else
						cEspecie  := SE2->E2_TIPO
					Endif
					lAchouTit := .T.
					nPos   	  := 1
	    		Endif

    			// Localiza o titulo
    			If lFr650Fil
	    			lAchouTit := Execblock("FR650FIL",.F.,.F.,{aValores})
	    		Endif

				// Busca pela chave antiga
				If !lAchouTit
					dbSetOrder(1)
					//Chave retornada pelo banco
					cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie) 
					While !lAchouTit
						If !dbSeek(xFilial()+cChave650)
							nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))},nPos+1)
							If nPos != 0
								cEspecie := aTabela[nPos][2]
								cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie) 
							Else
								Exit
							Endif
						Else
							lAchouTit := .T.
						Endif					
					Enddo					
					
					//Chave retornada pelo banco com a adicao de espacos para tratar chave enviada ao banco com
					//tamanho de nota de 6 posicoes e retornada quando o tamanho da nota e 9 (atual)
					If !lAchouTit
						cNumTit := SubStr(cNumTit,1,nTamPre)+Padr(Substr(cNumTit,nTampre+1,nTamNum),nTamNum)+SubStr(cNumTit,nTamPre+nTamNum+1,nTamPar)
						cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
						nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))})
						While !lAchouTit
							If !dbSeek(xFilial()+cChave650)
								nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))},nPos+1)
								If nPos != 0
									cEspecie := aTabela[nPos][2]
									cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
								Else
									Exit
								Endif
							Else
								lAchouTit := .T.
							Endif
						Enddo
					Endif

					If lAchouTit
						If mv_par07 == 2
							cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
							cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
							nPosEsp	  := nPos	// Gravo nPos para volta-lo ao valor inicial, caso
							                    // Encontre o titulo
							While !Eof() .and. SE2->E2_FILIAL+cChaveSe2 == xFilial("SE2")+cChave650
								nPos := nPosEsp
								If Empty(cCgc)
									Exit
								Endif
								dbSelectArea("SA2")
								If dbSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA)
									If Substr(SA2->A2_CGC,1,14) == cCGC .or. StrZero(Val(SA2->A2_CGC),14,0) == StrZero(Val(cCGC),14,0)
										Exit
									Endif
								Endif
								dbSelectArea("SE2")
								dbSkip()
								cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
								cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
								nPos 	  := 0
							Enddo
						Endif
					Endif
				EndIf
				If nPos == 0
					cEspecie	:= "  "
					cCliFor	:= "  "
				Else
					cEspecie := IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO)				
					cNumTit := IIF(mv_par07==1,SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA),SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA))
					cCliFor	:= IIF(mv_par07==1,SE1->E1_CLIENTE+" "+SE1->E1_LOJA,SE2->E2_FORNECE+" "+SE2->E2_LOJA)
				EndIF
				If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
					nLidos += nTamDet
					Loop
				EndIf
			EndIF
		Else
			lProcessa := .F.
		Endif
	ElseIf mv_par08 == 3
		//Tipo qual registro foi lido
		xBuffer := Space(nTamDet)
		FREAD(nHdlBco, @xBuffer, nTamDet)
		oReport:IncMeter()
		
		If !lHeader
			nLidos  += nTamDet
			lHeader := .T.
			Loop
		EndIf
		
		/*
		Tipo 9 = Trailer
		Versão 001 => Tipo 2 = Detalhe Informações adicionais, Tipo 3 = Pix Link
		Versão 002 => Tipo 2 = Detalhe Informações adicionais, Tipo 4 = Geração QrCode
		*/
		If !(cTipoReg := (SubStr(xBuffer, 1, 1))) $ "1|5"
			nLidos += nTamDet
			Loop
		EndIf
		
		nArray := Iif(cTipoReg == "1", 2, 1)
		
		If (!aPosicoes[nArray,1,3] .Or. !aPosicoes[nArray,3,3])
			nLidos += nTamDet
			Loop				
		EndIf		
		
		nDespes   := 0
		nDescont  := 0
		nAbatim   := 0
		nValRec   := 0
		nJuros    := 0
		nMulta    := 0
		cData     := ""
		dBaixa    := CtoD("  /  /  ")
		cEspecie  := "  "
		cNossoNum := Space(15)
		cForne    := Space(8)
		cDtVc     := ""
		nPos      := 0
		cRej      := ""
		
		cIDTran := Substr(xBuffer, aPosicoes[nArray,1,1], aPosicoes[nArray,1,2])				
		cOcorr  := AllTrim(Substr(xBuffer, aPosicoes[nArray,3,1], aPosicoes[nArray,3,2]))
		
		If cTipoReg == "1"
		
			If aPosicoes[nArray,6,3]
				nValRec := Round(Val(Substr(xBuffer, aPosicoes[nArray,6,1], aPosicoes[nArray,6,2])) / 100, 2)
			EndIf			
			
			If aPosicoes[nArray,4,3]
				cDtVc := Substr(xBuffer, aPosicoes[nArray,4,1], aPosicoes[nArray,4,2])						
				cDtVc   := Substr(cDtVc, 7, 2) + "/" + Substr(cDtVc, 5, 2) + "/" + Substr(cDtVc, 1, 4)
			EndIf
			
			dDtVenc := CtoD(cDtVc, "ddmmyy")
			
			If aPosicoes[nArray,7,3]
				cData  := Substr(xBuffer, aPosicoes[nArray,7,1], aPosicoes[nArray,7,2])
				cData  := Substr(cData, 7, 2) + "/" + Substr(cData, 5, 2) + "/" + Substr(cData, 1, 4)
			EndIf
			
			dBaixa := Ctod(cData, "ddmmyy")			
			
			If aPosicoes[nArray,8,3]				 
				cRej    := AllTrim(Substr(xBuffer, aPosicoes[nArray,8,1], aPosicoes[nArray,8,2]))
				nLenRej := aPosicoes[nArray,8,2]
			EndIf
		
		Else
		
			If aPosicoes[nArray,4,3]
				cData  := Substr(xBuffer, aPosicoes[nArray,4,1], aPosicoes[nArray,4,2])
				cData  := Substr(cData, 7, 2) + "/" + Substr(cData, 5, 2) + "/" + Substr(cData, 1, 4)
			EndIf
			
			dBaixa := Ctod(cData, "ddmmyy")
			
			If aPosicoes[nArray,5,3]
				cDtVc := Substr(xBuffer, aPosicoes[nArray,5,1], aPosicoes[nArray,5,2])
				cDtVc := Substr(cDtVc, 7, 2) + "/" + Substr(cDtVc, 5, 2) + "/" + Substr(cDtVc, 1, 4)
			EndIf
			
			dDtVenc := CtoD(cDtVc, "ddmmyy")
			
			If aPosicoes[nArray,7,3]
				nJuros := Round(Val(Substr(xBuffer, aPosicoes[nArray,7,1], aPosicoes[nArray,7,2])) / 100, 2)
			EndIf
			
			If aPosicoes[nArray,8,3]
				nMulta := Round(Val(Substr(xBuffer, aPosicoes[nArray,8,1], aPosicoes[nArray,8,2])) / 100, 2)
			EndIf
			
			If aPosicoes[nArray,9,3]
				nDescont := Round(Val(Substr(xBuffer, aPosicoes[nArray,9,1], aPosicoes[nArray,9,2])) / 100, 2)
			EndIf
			
			If aPosicoes[nArray,10,3]
				nDescont += Round(Val(Substr(xBuffer, aPosicoes[nArray,10,1], aPosicoes[nArray,10,2])) / 100, 2)
			EndIf
			
			If aPosicoes[nArray,12,3]
				nValRec := Round(Val(Substr(xBuffer, aPosicoes[nArray,12,1], aPosicoes[nArray,12,2])) / 100, 2)
			EndIf		
		EndIf
		
		dbSelectArea("F71")
		F71->(dbSetOrder(3))
		
		If !F71->(DbSeek(cIDTran))
			nLidos += nTamDet
			Loop			
		EndIf
		
		cNumTit  := F71->F71_NUM
		cTipo    := F71->F71_TIPO
		cParcela := F71->F71_PARCEL
		cPrefixo := F71->F71_PREFIX
		cBANCO   := F71->F71_CODBAN
		cAGENCIA := F71->F71_AGENCI
		cCONTA   := F71->F71_NUMCON		
		lOk      := .T.
		aValores := ( { cNumTit, dBaixa, cTipo, cNossoNum, nDespes, nDescont, nAbatim, nValRec, nJuros, nMulta, nValCc, dCred, cOcorr, xBuffer })		
		
		//Template GEM
		If (lF650Var .Or. lGEMBaixa)
			If lF650Var
				ExecBlock("F650VAR", .F., .F., {aValores})
			Else
				ExecTemplate("GEMBaixa", .F., .F., Nil)
			EndIf
		EndIf
		
		If Alltrim(cNumTit)=="5401" .Or. Alltrim(cNumTit)=="900029591"
			Alert("qq")
		Endif

		If (lProcessa := !Empty(cTipo))
			If (nPosEsp := AScan(aTabela, {|x| x[2] == cTipo})) > 0
				cEspecie := aTabela[nPosEsp,2]
			EndIf
			
			If cEspecie $ MVABATIM // Não lê títulos de abatimentos
				nLidos += nTamDet
				Loop
			Endif
			
			lAchouTit := .F.
			DbSelectArea("SE1")	
			
			If lFr650Fil
				lAchouTit := Execblock("FR650FIL",.F.,.F.,{aValores})
			EndIf
			
			If !lAchouTit
				SE1->(DbSetOrder(1))
				lAchouTit := SE1->(DbSeek(F71->F71_FILIAL+cPrefixo+cNumTit+cParcela+cTipo))
			EndIf
			
			If lAchouTit
				nPos     := 1
				cEspecie := SE1->E1_TIPO
				cNumTit  := SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA)
				cCliFor	 := SE1->E1_CLIENTE+" "+SE1->E1_LOJA
			EndIf
			
			If cEspecie $ MVABATIM
				nLidos += nTamDet
				Loop
			EndIf
		EndIf
	
	Else
	
		If ".CPR" $ MV_PAR02 .OR. ".RET" $ MV_PAR02
			HELP(' ',1,"Aviso" ,,STR0064,2,0,,,,,, {STR0065}) //"A pergunta 'Configuração CNAB ?' foi definida como 'Modelo 2' e o arquivo de configuração é 'Modelo 1' ou 'Modelo PIX'." "Para o uso deste layout, ajuste a pergunta 'Configuração CNAB ?' de acordo com o tipo de layout 'Modelo 1' ou 'Modelo PIX'."
			Return .F.		
		Endif		
		
		aLeitura := xReadCnab2(nHdlBco,MV_PAR02,nTamDet,aArqConf)
		cNumTit  := SubStr(aLeitura[1],1,nTamTit)
		
		If Alltrim(cNumTit)=="5401" .or. Alltrim(cNumTit)=="900029591"
			Alert("qq")
		Endif

		If Empty(cNumTit) .And. Empty(aLeitura[05])
			nLidos += nTamDet
			Loop			
		Endif	

		cData  := aLeitura[04]
		dBaixa := dDataBase
		
		If !Empty(cData)
			cData    :=	ChangDate(cData,SEE->EE_TIPODAT)
			dBaixa   :=	Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5),"ddmm"+Replicate("y", Len(Substr(cData,5))))		
		EndIf
		
		cTipo    	:= aLeitura[02]
		cTipo    	:= Iif(Empty(cTipo),"NF ",cTipo)		// Bradesco
		cNossoNum   := aLeitura[11]
		nDespes  	:= aLeitura[06]
		nDescont 	:= aLeitura[07]
		nAbatim  	:= aLeitura[08]
		nValRec  	:= aLeitura[05]
		nJuros   	:= aLeitura[09]
		nMulta   	:= aLeitura[10]
		cOcorr   	:= PadR(aLeitura[03],3)
		
		If Len(Alltrim(cOcorr)) > 2 .And. mv_par07 == 2
			cOcorr := PadR( Left(Alltrim(cOcorr),2) , 3)
		EndIf
		
		nValIof		:= aLeitura[12]
		nValCC   	:= aLeitura[13]
		cData    	:= aLeitura[14]
		dDataCred   := dDataBase
		
		If !Empty(cData)
			cData     := ChangDate(cData, SEE->EE_TIPODAT)
			dDataCred := Ctod(Substr(cData, 1, 2) + "/" + Substr(cData, 3, 2) + "/" + Substr(cData, 5, 2),"ddmmyy")
		EndIf
		
		dDataUser	:= dDataCred
		dCred		:= dDataCred
		cRej		:= aLeitura[15]
		cForne		:= aLeitura[16]
		xBuffer		:= aLeitura[17]

		If !(SubStr(xBuffer,14,1) == "J" .and. Substr(xBuffer,18,2) == "52")
			//CGC
			If Len(aLeitura) > 19
				cCgc := aLeitura[20]
			Else
				cCgc := " "
			Endif
		
			lOk := .t.
			lAchouTit := .F.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ o array aValores ir  permitir ³
			//³ que qualquer exce‡„o ou neces-³
			//³ sidade seja tratado no ponto  ³
			//³ de entrada em PARAMIXB        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			// Estrutura de aValores
			//	Numero do T¡tulo	- 01
			//	data da Baixa		- 02
			// Tipo do T¡tulo		- 03
			// Nosso Numero		- 04
			// Valor da Despesa	- 05
			// Valor do Desconto	- 06
			// Valor do Abatiment- 07
			// Valor Recebido    - 08
			// Juros					- 09
			// Multa					- 10
			// Valor do Credito	- 11
			// Data Credito		- 12
			// Ocorrencia			- 13
			// Linha Inteira		- 14

			aValores := ( { cNumTit, dBaixa, cTipo, cNossoNum, nDespes, nDescont, nAbatim, nValRec, nJuros, nMulta, nValCc, dCred, cOcorr, xBuffer })
			nLenRej := Len(AllTrim(cRej))

			// Template GEM
			If lF650Var
				ExecBlock("F650VAR",.F.,.F.,{aValores})
			ElseIf ExistTemplate("GEMBaixa")
				ExecTemplate("GEMBaixa",.F.,.F.,)
			Endif 	


			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica especie do titulo    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))})
			If nPos != 0
				cEspecie := aTabela[nPos][2]
			Else
				cEspecie	:= "  "
			EndIf								
			If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
				nLidos += nTamDet
				Loop
			Endif

			//Busca por IDCNAB sem filial no indice
			lAchouTit := .F.
			dbSelectArea(IIF(mv_par07==1,"SE1","SE2"))
			dbSetOrder(IIF(mv_par07==1,19,13))
			cChave := Substr(cNumTit,1,10)

			If !Empty(cNumTit) .And. MsSeek(cChave)
				If ( mv_par07 == 1 )
					cEspecie  := SE1->E1_TIPO
				Else
					cEspecie  := SE2->E2_TIPO
				Endif
				lAchouTit := .T.
				nPos   	  := 1
			Endif      
			
			If !lAchouTit
				Alert("aqui")
			Endif
			// Localiza o titulo
			If lFr650Fil
				lAchouTit := Execblock("FR650FIL",.F.,.F.,{aValores})
			Endif
			
			// Busca pela chave antiga
			If !lAchouTit
				dbSetOrder(1)
				//Chave retornada pelo banco
				cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie) 
				While !lAchouTit
					If !dbSeek(xFilial()+cChave650)
						nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))},nPos+1)
						If nPos != 0
							cEspecie := aTabela[nPos][2]
							cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie) 
						Else
							Exit
						Endif
					Else
						lAchouTit := .T.
					Endif					
				Enddo					
				
				//Chave retornada pelo banco com a adicao de espacos para tratar chave enviada ao banco com
				//tamanho de nota de 6 posicoes e retornada quando o tamanho da nota e 9 (atual)
				If !lAchouTit
					cNumTit := SubStr(cNumTit,1,nTamPre)+Padr(Substr(cNumTit,nTampre+1,nTamNum),nTamNum)+SubStr(cNumTit,nTamPre+nTamNum+1,nTamPar)
					cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
					While !lAchouTit
						If !dbSeek(xFilial()+cChave650)
							nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,Len(IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO))))},nPos+1)
							If nPos != 0
								cEspecie := aTabela[nPos][2]
								cChave650 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
							Else
								Exit
							Endif
						Else
							lAchouTit := .T.
						Endif
					Enddo
				Endif

				If lAchouTit
					If mv_par07 == 2
						cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
						cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
						nPosEsp	  := nPos	// Gravo nPos para volta-lo ao valor inicial, caso
											// Encontre o titulo
						While !Eof() .and. SE2->E2_FILIAL+cChaveSe2 == xFilial("SE2")+cChave650
							nPos := nPosEsp
							If Empty(cCgc)
								Exit
							Endif
							dbSelectArea("SA2")
							If dbSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA)
								If Substr(SA2->A2_CGC,1,14) == cCGC .or. StrZero(Val(SA2->A2_CGC),14,0) == StrZero(Val(cCGC),14,0)
									Exit
								Endif
							Endif
							dbSelectArea("SE2")
							dbSkip()
							cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
							cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
							nPos 	  := 0
						Enddo
					Endif
				Endif
			Endif
			If nPos == 0
				cEspecie	:= "  "
				cCliFor	:= "  "
			Else
				cEspecie := IIF(mv_par07==1,SE1->E1_TIPO,SE2->E2_TIPO)				
				cNumTit := IIF(mv_par07==1,SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA),SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA))
				cCliFor	:= IIF(mv_par07==1,SE1->E1_CLIENTE+" "+SE1->E1_LOJA,SE2->E2_FORNECE+" "+SE2->E2_LOJA)
			EndIF
			If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
				nLidos += nTamDet
				Loop
			EndIf
		Else
			Loop
		Endif
	EndIf   
	
	If !lProcessa
		nLidos += nTamDet
		loop
	EndIf
	
	nValOrig := 0
	DbSelectArea("SEB")
	
	If mv_par07 == 1
		cCarteira := "R"
		If lAchouTit
			nValOrig := SE1->E1_VLCRUZ
		Endif
	Else
		cCarteira := "P"
		If lAchouTit
			nValOrig := SE2->E2_VLCRUZ
		Endif
	EndIf
	
	//Verifica se a despesa está descontada do valor principal
	If SEE->EE_DESPCRD == "S"
		nValRec := nValRec+nDespes+nValIOF - nValCC
	EndIf      
	
	If mv_par08 != 3
		If SEB->(dbSeek(cFilial+mv_par03+cOcorr+cCarteira))
			cDescr := RTrim(cOcorr) + "-" + Subs(SEB->EB_DESCRI,1,27)
			
			// Ponto de entrada para alterar a descricao do relatorio
			If ExistBlock ("F650DESCR")
				cDescr := ExecBlock("F650DESCR",.F.,.F.,{cDescr})
			EndIf                            	
						
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua contagem dos SubTotais por ocorrencia  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nCntOco := Ascan(aCntOco, { |X| X[1] == cOcorr})
			If nCntOco == 0
				Aadd(aCntOco,{cOcorr,Subs(SEB->EB_DESCRI,1,27),nDespes,nDescont,nAbatim,nValRec,nJuros+nMulta,nValIof,nValCc,nValOrig})
			Else
				aCntOco[nCntOco][DESPESAS]     +=nDespes
				aCntOco[nCntOco][DESCONTOS]    +=nDescont
				aCntOco[nCntOco][ABATIMENTOS]  +=nAbatim
				aCntOco[nCntOco][VALORRECEBIDO]+=nValRec
				aCntOco[nCntOco][JUROS]        +=nJuros+nMulta
				aCntOco[nCntOco][VALORIOF]     +=nValIOF
				aCntOco[nCntOco][VALORCC]      +=nValCC
				aCntOco[nCntOco][VALORORIG]    +=nValOrig
			Endif

			If SEB->EB_OCORR $ "03ü15ü16ü17ü40ü41ü42"		//Registro rejeitado
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica tabela de rejeicao   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nLenRej > 0
					If dbSeek(cFilial+mv_par03+cOcorr+cCarteira+Substr(cRej,1,3))
							cDescr := RTrim(cOcorr) + "(" + Substr(cRej,1,3) + ;
										")" + "-" + Substr(SEB->EB_DESCMOT,1,22)
					EndIf
				EndIf
				lRej := .T.	
			EndIf	
			lOcorr := .T.
		Endif
 	ElseIf SEB->(dbSeek(xFilial("SEB")+mv_par03+PadR(cOcorr,3)+cCarteira))
		cDescr := RTrim(cOcorr) + "-" + Subs(SEB->EB_DESCRI,1,27)
		
		If cOcorr == "03" .And. (lRej := (nLenRej > 0))
			If SEB->(dbSeek(xFilial("SEB")+mv_par03+PadR(cOcorr,3)+cCarteira+cRej))
				cDescr := RTrim(cOcorr) + "(" + cRej + ")" + "-" + Substr(SEB->EB_DESCMOT,1,22)
			EndIf
		EndIf
		
		//Ponto de entrada para alterar a descricao do relatorio
		If ExistBlock ("F650DESCR")
			cDescr := ExecBlock("F650DESCR",.F.,.F.,{cDescr})
		EndIf
		
		//Efetua contagem dos SubTotais por ocorrencia			
		If (nCntOco := Ascan(aCntOco, { |X| X[1] == cOcorr})) == 0
			Aadd(aCntOco, {cOcorr, Subs(SEB->EB_DESCRI, 1, 27), nDespes, nDescont, nAbatim, nValRec, nJuros + nMulta, nValIof, nValCc, nValOrig})
		Else
			aCntOco[nCntOco][DESPESAS]     +=nDespes
			aCntOco[nCntOco][DESCONTOS]    +=nDescont
			aCntOco[nCntOco][ABATIMENTOS]  +=nAbatim
			aCntOco[nCntOco][VALORRECEBIDO]+=nValRec
			aCntOco[nCntOco][JUROS]        +=nJuros+nMulta
			aCntOco[nCntOco][VALORIOF]     +=nValIOF
			aCntOco[nCntOco][VALORCC]      +=nValCC
			aCntOco[nCntOco][VALORORIG]    +=nValOrig
		Endif
		
		lOcorr := .T.
	EndIf
	
	If !lOcorr
		cDescr  := Space(29)
		
		If (nCntOco := (Ascan(aCntOco, {|X| X[2] == STR0016}))) == 0
			Aadd(aCntOco, {"00 ", STR0016, nDespes, nDescont, nAbatim, nValRec, (nJuros+nMulta), nValIof, nValCc, nValOrig})
		Else
			aCntOco[nCntOco][DESPESAS]     +=nDespes
			aCntOco[nCntOco][DESCONTOS]    +=nDescont
			aCntOco[nCntOco][ABATIMENTOS]  +=nAbatim
			aCntOco[nCntOco][VALORRECEBIDO]+=nValRec
			aCntOco[nCntOco][JUROS]        +=nJuros+nMulta
			aCntOco[nCntOco][VALORIOF]     +=nValIOF
			aCntOco[nCntOco][VALORCC]      +=nValCC
			aCntOco[nCntOco][VALORORIG]    +=nValOrig
		Endif
	EndIf

	If mv_par07 == 1
		dbSelectArea("SE1")
	Else
		dbSelectArea("SE2")
	EndIf
		
	If Empty(cOcorr)
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0015)  	//"OCORRENCIA NAO ENVIADA"
		lOk     := PRINTLINE(oReport,lPrint)
	ElseIf !lOcorr
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0016)  //"OCORRENCIA NAO ENCONTRADA"
		lOk     := PRINTLINE(oReport,lPrint)
	EndIf

	If dBaixa < dDataFin
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0026)		//"DATA MENOR QUE DATA FECH.FINANCEIRO"
		lOk     := PRINTLINE(oReport,lPrint)
	Endif

	IF Empty(cNumTit) 
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0017)  	//"NUMERO TITULO NAO ENVIADO"
		lOk     := PRINTLINE(oReport,lPrint)
	EndIf

	If !lAchouTit                     
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0018)  	//"TITULO NAO ENCONTRADO"
		lOk     := PRINTLINE(oReport,lPrint)
	Endif

	IF Substr(dtoc(dBaixa),1,1)=' '   
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0019) 		//"DATA DE BAIXA NAO ENVIADA"
		lOk     := PRINTLINE(oReport,lPrint)
	EndIF

	IF Empty(cTipo)                       
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0020)  	//"ESPECIE NAO ENVIADA"
		lOk     := PRINTLINE(oReport,lPrint)
	Endif

	If Empty(cEspecie)
		lPrint  := Empty(cDescr2)
		cDescr2 := OemToAnsi(STR0021)  	//"ESPECIE NAO ENCONTRADA"
		lOk     := PRINTLINE(oReport, lPrint)           	
	Endif
	
	If mv_par07 == 1 .And. lAchouTit .and. nAbatim == 0 .And. SE1->E1_SALDO > 0
		nValPadrao := nValRec-(nJuros+nMulta+nValCC-nDescont)
		nTotAbat   := SumAbatRec(Substr(cNumtit, 1, nTamPre), Substr(cNumtit, (nTamPre+1), nTamNum), Substr(cNumtit, (nTamPre+nTamNum+1), nTamPar), 1, "S")
		
		If Round(NoRound(nValPadrao,3),2) > 0
			If Round(NoRound((xMoeda(SE1->E1_SALDO, SE1->E1_MOEDA, 1, dBaixa, 3, SE1->E1_TXMOEDA) - nTotAbat + SE1->E1_ACRESC - SE1->E1_DECRESC - SE1->E1_VLBOLSA),3),2) < Round(NoRound(nValPadrao,3),2)
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0050 //"VLR REC MAIOR"
				lOk     := PRINTLINE(oReport, lPrint)
			ElseIf Round(NoRound((xMoeda(SE1->E1_SALDO,SE1->E1_MOEDA,1,dBaixa,3,SE1->E1_TXMOEDA)-nTotAbat + SE1->E1_ACRESC - SE1->E1_DECRESC - SE1->E1_VLBOLSA),3),2) > Round(NoRound(nValPadrao,3),2)
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0051 //"VLR REC MENOR"
				lOk     := PRINTLINE(oReport, lPrint)
			Endif		
		EndIf
	Endif
	
	If mv_par07 == 2 .and. lAchouTit .and. nAbatim == 0 .and. SE2->E2_SALDO > 0
		nValPadrao := nValRec-(nJuros+nMulta-nDescont)
		nTotAbat   := SumAbatPag(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_FORNECE,SE2->E2_MOEDA,"S",dDatabase,SE2->E2_LOJA)
		
		If lF430TXBX .And. SE2->E2_MOEDA > 1
			aTitulo  := {SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, dBaixa}
			aAreaSE2 := SE2->(GetArea())
			nTxMoeda := ExecBlock("F430TXBX", .F., .F., aTitulo)
			
			If nTxMoeda == 0 .And. SE2->E2_TXMOEDA != 0 
				nTxMoeda := SE2->E2_TXMOEDA
			EndIf
			
			RestArea(aAreaSE2)
			FwFreeArray(aAreaSE2)
			FwFreeArray(aTitulo)			
		EndIf
		
		If Round(NoRound(nValPadrao,3),2) > 0
			If Round(NoRound((xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)-nTotAbat),3),2) < Round(NoRound(nValPadrao,3),2)
				lPrint := Empty(cDescr2)
				cDescr2 := STR0052 //"VLR PAGO MAIOR"
				lOk := PRINTLINE(oReport,lPrint)
			Endif
			If Round(NoRound((xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)-nTotAbat),3),2) > Round(NoRound(nValPadrao,3),2)
				lPrint := Empty(cDescr2)
				cDescr2 := STR0053 //"VLR PAGO MENOR"
				lOk := PRINTLINE(oReport,lPrint)
			Endif
		EndIf
	Endif
	
	//Informa a condicao da baixa do titulo
	If lOk
		If mv_par07 == 1
			If SE1->E1_SALDO == 0
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0028 //"BAIXADO ANTERIORMENTE - TOTAL"
				lOk     := PRINTLINE(oReport,lPrint)
			ElseIf SE1->E1_VALOR <> SE1->E1_SALDO
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0029 //"BAIXADO ANTERIORMENTE - PARCIAL"
				lOk     := PRINTLINE(oReport,lPrint)
			EndIf
		Else
			If SE2->E2_SALDO == 0
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0028 //"BAIXADO ANTERIORMENTE - TOTAL"
				lOk 	:= PRINTLINE(oReport,lPrint)
			ElseIf SE2->E2_VALOR <> SE2->E2_SALDO
				lPrint  := Empty(cDescr2)
				cDescr2 := STR0029 //"BAIXADO ANTERIORMENTE - PARCIAL"
				lOk 	:= PRINTLINE(oReport,lPrint)
			EndIf
		EndIf	
		
		If lOk
			lPrint := Empty(cDescr2)
			
			If lRej
				cDescr2 := OemToAnsi(STR0055)  	//"TITULO REJEITADO"
			Else
				If mv_par07 == 1
					cDescr2 := OemToAnsi(STR0022)  	//"TITULO RECEBIDO"
				Else
					cDescr2 := OemToAnsi(STR0030)  	//"TITULO PAGO"
				Endif
			EndIf	
			
			lOk := PRINTLINE(oReport, lPrint)
		EndIf
	EndIf
	
	nLidos += nTamDet
	cDescr2 := ""
	cDescr := ""
EndDO

If mv_par08 == 3 .And. aPosicoes != Nil
	FwFreeArray(aPosicoes)
EndIf

oSection1:Finish()

//Imprime Subtotais por ocorrencia
oSection2:Init()

For x :=1 to Len(aCntOco)
	nTit    := aCntOco[x][1] + Substr(aCntOco[x][2],1,30)
	nVOrig  := aCntOco[x][10]
	nVReceb := aCntOco[x][6]
	nDCOB   := aCntOco[x][3]
	nVDESC  := aCntOco[x][4]
	nVABAT  := aCntOco[x][5]
	nVJURO  := aCntOco[x][7]
	nVIOF   := aCntOco[x][8]
	nOCRED  := aCntOco[x][9]
	
	oSection2:PrintLine()
Next
oSection2:Finish()

//Restaura area do contas a receber ou contas a pagar
RestArea(aSE1_SE2)

//Fecha os Arquivos ASCII
fClose(nHdlBco)
fClose(nHdlConf)

If FILE(cDestino+cBarra+cFileName)
	FErase(cDestino+cBarra+cFileName)
EndIf

Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PRINTLINE ³ Autor ³ Marcel Borges Ferreira³ Data ³ 04/09/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impress„o da Linha                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ IMPLIN(texto)                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINR650.PRG                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PRINTLINE(oReport,lPrint) 

Local oSection1 := oReport:Section(1)

If lPrint
	oSection1:Cell("SEC1_TIT"):Show()
	oSection1:Cell("SEC1_CLI"):Show()
	oSection1:Cell("SEC1_OCOR"):Show()
	oSection1:Cell("SEC1_DTOCOR"):Show()
	oSection1:Cell("SEC1_VORIG"):Show()
	oSection1:Cell("SEC1_DCOB"):Show()
	oSection1:Cell("SEC1_VDESC"):Show()
	oSection1:Cell("SEC1_VABAT"):Show()
	oSection1:Cell("SEC1_VJURO"):Show()
	
	If mv_par07 == 1
		oSection1:Cell("SEC1_VRECE"):Show()
		oSection1:Cell("SEC1_VIOF"):Show()
		oSection1:Cell("SEC1_OCRED"):Show()
		oSection1:Cell("SEC1_DTCRED"):Show()
	Else
		oSection1:Cell("SEC1_VPAGO"):Show()
	EndIf
	
	oSection1:Cell("SEC1_NTIT"):Show()
	
	oSection1:PrintLine()
	
Else

	oSection1:Cell("SEC1_TIT"):Hide()
	oSection1:Cell("SEC1_CLI"):Hide()
	oSection1:Cell("SEC1_OCOR"):Hide()
	oSection1:Cell("SEC1_DTOCOR"):Hide()
	oSection1:Cell("SEC1_VORIG"):Hide()
	oSection1:Cell("SEC1_DCOB"):Hide()
	oSection1:Cell("SEC1_VDESC"):Hide()
	oSection1:Cell("SEC1_VABAT"):Hide()
	oSection1:Cell("SEC1_VJURO"):Hide()
	If mv_par07 == 1
		oSection1:Cell("SEC1_VRECE"):Hide()
		oSection1:Cell("SEC1_VIOF"):Hide()
		oSection1:Cell("SEC1_OCRED"):Hide()
		oSection1:Cell("SEC1_DTCRED"):Hide()
	Else 
		oSection1:Cell("SEC1_VPAGO"):Hide()
	EndIf                                 
	
	oSection1:Cell("SEC1_NTIT"):Hide()
	
	oSection1:PrintLine()
	
EndIf

Return .F.


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ExecSchedule³ Autor ³ Aldo Barbosa dos Santos      ³21/12/10³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Retorna se o programa esta sendo executado via schedule     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ExecSchedule()
Local lRetorno := .T.

lRetorno := IsBlind()

Return( lRetorno )



static Function xReadCnab2(nHandle,cLayOut,nMaxLn,aLayOut,nLinRead)

Local nHdlLay		:= 0
Local lContinua		:= .T.
Local cBuffer		:= ""
Local nCntFor		:= 0
Local nPosIni		:= 0
Local nPosFim		:= 0
Local nTamanho		:= 0
Local nDecimal		:= 0
Local nPosSeg		:= 0
Local aSegmento		:= {}
Local aDetalhe		:= {}
Local cLinUlt		:= ""
Local cLinAtu		:= ""
Local nCntFor2		:= 0
Local cIdent		:= ""
Local xTITULO		:= ""
Local xTIPO			:= ""
Local xOCORRENCI	:= ""
Local xDATA     	:= "000000"
Local xVALOR    	:= 0.00
Local xDESPESA  	:= 0.00
Local xDESCONTO 	:= 0.00
Local xABATIMENT	:= 0.00
Local xJUROS    	:= 0.00
Local xMULTA    	:= 0.00
Local xNOSSONUM 	:= ""
Local xRESERVADO	:= ""
Local xValIof   	:= 0.00
Local xValCC    	:= 0.00
Local xDATACRED 	:= "000000"
Local xMOTIVO   	:= ""
Local xBuffer   	:= ""
Local nLeitura  	:= 0			// Numero de Leituras Efetuadas
Local lSegValido	:= .F.			// Controle de Leitura de segmentos validos
Local nLidosBco 	:= 0			// Numero de Bytes lidos do Arquivo de Retorno
Local xAUTENTICA	:= ""
Local aBuffer		:= {}
Local xCGC			:= ""
Local cChave    	:= ""
Local aDirTmp   	:= {}
Local xBANCO		:= ""
Local xAGENCIA		:= ""
Local xCONTA		:= ""
Local aHeadL		:= Array(4,5)	//Array das posicoes de Banco, Agencia e Conta no Header para a baixa
Local aBanco		:= Array(3)		//Dados bancarios para a baixa (coletados no header)
Local lHeadL		:= .F.
Local xCGCH			:= ""
Local xCODBAR		:= ""
Local xContOpt		:=""
Local nPosj52		:= 0
Local cSegmento		:= ''
Local cSeg52		:= ''
Local lReadJ		:= .F.
Local aReadSeg		:= {}
Local xCGCEMP		:= ""			//CNPJ da empresa utilizada no DDA para posicionar a SM0
Local cTipoReg      := ""
Local lBuffer       := .F.
Local cHeader       := ""

Default nMaxLn		:= 1000
Default aLayOut		:= {}
Default nLinRead	:= 0

Private xConteudo  := ""

If ( File(cLayOut) )

	If Len(aLayOut) == 0
		aDirTmp	:= Directory(cLayOut)
	ELse
		aDirTmp := AClone(aLayOut)
	EndIf

	// Inicializa flag que indica se possui dados bancarios para baixa - Header de Lote
	For nCntFor := 1 to Len(aHeadL)
		aHeadL[ nCntFor, 5 ] := .F.
	Next

	cChave := aDirTmp[1][1]+str(aDirTmp[1][2])+DtoC(aDirTmp[1][3])+aDirTmp[1][4]

	If Empty(__aLayCNAB) .Or. cChave != __aLayCNAB[1]
	   nHdlLay := FOpen(cLayOut,64)
	   While ( lContinua )
			cBuffer := FreadStr(nHdlLay,502)
			If ( !Empty(cBuffer) )
				If ( SubStr(cBuffer,1,1)=="1" )
					If ( SubStr(cBuffer,3,1)=="D" )
						aadd(aSegmento,{AllTrim(SubStr(cBuffer,02,03)),;
						AllTrim(SubStr(cBuffer,35,255)),0,0,0,0})
						aadd(aDetalhe,Array(20,4))
					EndIf
				Else
					If ( SubStr(cBuffer,3,1)=="D" )
						nPosIni  := Val(SubStr(cBuffer,20,03))
						nPosFim  := Val(SubStr(cBuffer,23,03))
						nDecimal := Val(SubStr(cBuffer,26,01))
						nTamanho := nPosFim - nPosIni +1
						xConteudo:= AllTrim(SubStr(cBuffer,27,255))
						nPosSeg := AScan(aSegmento,{|x| x[1]==Alltrim(SubStr(cBuffer,02,03))})
			      		If ( nPosSeg != 0 )
							Do Case
							Case xConteudo=="TITULO"
								aDetalhe[nPosSeg,1,1] := "TITULO"
								aDetalhe[nPosSeg,1,2] := nPosIni
								aDetalhe[nPosSeg,1,3] := nTamanho
								aDetalhe[nPosSeg,1,4] := nDecimal
							Case  xConteudo=="ESPECIE"
								aDetalhe[nPosSeg,2,1] := "ESPECIE"
								aDetalhe[nPosSeg,2,2] := nPosIni
								aDetalhe[nPosSeg,2,3] := nTamanho
								aDetalhe[nPosSeg,2,4] := nDecimal
							Case xConteudo=="OCORRENCIA"
								aDetalhe[nPosSeg,3,1] := "OCORRENCIA"
								aDetalhe[nPosSeg,3,2] := nPosIni
								aDetalhe[nPosSeg,3,3] := nTamanho
								aDetalhe[nPosSeg,3,4] := nDecimal
							Case xConteudo=="DATA"
								aDetalhe[nPosSeg,4,1] := "DATA"
								aDetalhe[nPosSeg,4,2] := nPosIni
								aDetalhe[nPosSeg,4,3] := nTamanho
								aDetalhe[nPosSeg,4,4] := nDecimal
							Case xConteudo=="VALOR"
								aDetalhe[nPosSeg,5,1] := "VALOR"
								aDetalhe[nPosSeg,5,2] := nPosIni
								aDetalhe[nPosSeg,5,3] := nTamanho
								aDetalhe[nPosSeg,5,4] := nDecimal
							Case xConteudo=="DESPESA"
								aDetalhe[nPosSeg,6,1] := "DESPESA"
								aDetalhe[nPosSeg,6,2] := nPosIni
								aDetalhe[nPosSeg,6,3] := nTamanho
								aDetalhe[nPosSeg,6,4] := nDecimal
							Case xConteudo=="DESCONTO"
								aDetalhe[nPosSeg,7,1] := "DESCONTO"
								aDetalhe[nPosSeg,7,2] := nPosIni
								aDetalhe[nPosSeg,7,3] := nTamanho
								aDetalhe[nPosSeg,7,4] := nDecimal
							Case xConteudo=="ABATIMENTO"
								aDetalhe[nPosSeg,8,1] := "ABATIMENTO"
								aDetalhe[nPosSeg,8,2] := nPosIni
								aDetalhe[nPosSeg,8,3] := nTamanho
								aDetalhe[nPosSeg,8,4] := nDecimal
							Case xConteudo=="JUROS"
								aDetalhe[nPosSeg,9,1] := "JUROS"
								aDetalhe[nPosSeg,9,2] := nPosIni
								aDetalhe[nPosSeg,9,3] := nTamanho
								aDetalhe[nPosSeg,9,4] := nDecimal
							Case xConteudo=="MULTA"
								aDetalhe[nPosSeg,10,1] := "MULTA"
								aDetalhe[nPosSeg,10,2] := nPosIni
								aDetalhe[nPosSeg,10,3] := nTamanho
								aDetalhe[nPosSeg,10,4] := nDecimal
							Case xConteudo=="IOF"
								aDetalhe[nPosSeg,11,1] := "IOF"
								aDetalhe[nPosSeg,11,2] := nPosIni
								aDetalhe[nPosSeg,11,3] := nTamanho
								aDetalhe[nPosSeg,11,4] := nDecimal
							Case xConteudo=="OUTROSCREDITOS"
								aDetalhe[nPosSeg,12,1] := "OUTROSCREDITOS"
								aDetalhe[nPosSeg,12,2] := nPosIni
								aDetalhe[nPosSeg,12,3] := nTamanho
								aDetalhe[nPosSeg,12,4] := nDecimal
							Case xConteudo=="DATACREDITO"
								aDetalhe[nPosSeg,13,1] := "DATACREDITO"
								aDetalhe[nPosSeg,13,2] := nPosIni
								aDetalhe[nPosSeg,13,3] := nTamanho
								aDetalhe[nPosSeg,13,4] := nDecimal
							Case xConteudo=="MOTIVO"
								aDetalhe[nPosSeg,14,1] := "MOTIVO"
								aDetalhe[nPosSeg,14,2] := nPosIni
								aDetalhe[nPosSeg,14,3] := nTamanho
								aDetalhe[nPosSeg,14,4] := nDecimal
							Case xConteudo=="NOSSONUMERO"
								aDetalhe[nPosSeg,15,1] := "NOSSONUMERO"
								aDetalhe[nPosSeg,15,2] := nPosIni
								aDetalhe[nPosSeg,15,3] := nTamanho
								aDetalhe[nPosSeg,15,4] := nDecimal
							Case xConteudo=="RESERVADO"
								aDetalhe[nPosSeg,16,1] := "RESERVADO"
								aDetalhe[nPosSeg,16,2] := nPosIni
								aDetalhe[nPosSeg,16,3] := nTamanho
								aDetalhe[nPosSeg,16,4] := nDecimal
							Case xConteudo=="SEGMENTO"
								aSegmento[nPosSeg,3] := nPosIni
								aSegmento[nPosSeg,4] := nTamanho
							Case xConteudo=="AUTENTICACAO"
								aDetalhe[nPosSeg,17,1] := "AUTENTICACAO"
								aDetalhe[nPosSeg,17,2] := nPosIni
								aDetalhe[nPosSeg,17,3] := nTamanho
								aDetalhe[nPosSeg,17,4] := nDecimal
							Case xConteudo=="CGC"
								aDetalhe[nPosSeg,18,1] := "CGC"
								aDetalhe[nPosSeg,18,2] := nPosIni
								aDetalhe[nPosSeg,18,3] := nTamanho
								aDetalhe[nPosSeg,18,4] := nDecimal
							Case xConteudo=="CGCH"
								aDetalhe[nPosSeg,19,1] := "CGCH"
								aDetalhe[nPosSeg,19,2] := nPosIni
								aDetalhe[nPosSeg,19,3] := nTamanho
								aDetalhe[nPosSeg,19,4] := nDecimal
							Case xConteudo=="CODBAR"
								aDetalhe[nPosSeg,20,1] := "CODBAR"
								aDetalhe[nPosSeg,20,2] := nPosIni
								aDetalhe[nPosSeg,20,3] := nTamanho
								aDetalhe[nPosSeg,20,4] := nDecimal
							Case xConteudo=="SEGJ52"
								aSegmento[nPosSeg,5] := nPosIni
								aSegmento[nPosSeg,6] := nTamanho
							EndCase
						EndIf
					//Dados bancarios para a baixa
					ElseIf ( SubStr(cBuffer,3,1)=="H" )
						nPosIni  := Val(SubStr(cBuffer,20,03))
						nPosFim  := Val(SubStr(cBuffer,23,03))
						nDecimal := Val(SubStr(cBuffer,26,01))
						nTamanho := nPosFim - nPosIni +1
						xConteudo:= AllTrim(SubStr(cBuffer,27,255))
						lHeadL   := .T.
						Do Case
							Case xConteudo=="BANCO"
								aHeadL[1,1] := "BANCO"
								aHeadL[1,2] := nPosIni
								aHeadL[1,3] := nTamanho
								aHeadL[1,4] := nDecimal
								aHeadL[1,5] := .T.
							Case xConteudo=="AGENCIA"
								aHeadL[2,1] := "AGENCIA"
								aHeadL[2,2] := nPosIni
								aHeadL[2,3] := nTamanho
								aHeadL[2,4] := nDecimal
								aHeadL[2,5] := .T.
							Case xConteudo=="CONTA"
								aHeadL[3,1] := "CONTA"
								aHeadL[3,2] := nPosIni
								aHeadL[3,3] := nTamanho
								aHeadL[3,4] := nDecimal
								aHeadL[3,5] := .T.
							Case xConteudo=="CGCEMP"
								aHeadL[4,1] := "CGCEMP"
								aHeadL[4,2] := nPosIni
								aHeadL[4,3] := nTamanho
								aHeadL[4,4] := nDecimal
								aHeadL[4,5] := .T.
						EndCase
					EndIf
				EndIf
			Else
				lContinua := .F.
			EndIf
		EndDo
		FClose(nHdlLay)
		__aLayCNAB	:=	{}
		Aadd(__aLayCNAB,cChave)
		Aadd(__aLayCNAB,aSegmento)
		Aadd(__aLayCNAB,aDetalhe)
		Aadd(__aLayCNAB,aHeadL)
		Aadd(__aLayCNAB,aBanco)
	Else
		aSegmento	:= aClone(__aLayCNAB[2])
		aDetalhe	:= aClone(__aLayCNAB[3])
		aHeadL		:= aClone(__aLayCNAB[4])
		aBanco		:= aClone(__aLayCNAB[5])
	EndIf

EndIf

lContinua := .T.

While ( lContinua )
	aLinha		:= LerLinha(nHandle,nMaxLn)
	cBuffer 	:= aLinha[1]
	nLidosBco 	:= aLinha[2]
	lSegValido	:= .F.
	nLeitura++
	nLinRead++
	cSegmento	:= ""
	lBuffer     := .F.
	cHeader     := ""
	
	If (lBuffer := !Empty(cBuffer))
		cTipoReg := Substr(cBuffer, 8, 1)
	EndIf
	
	//Para o tratamento de CNPJ no Header de Lote, verifico as informações do Header se o mesmo foi configurado
	If nMaxLn < 1000 .And. !lHeadL
		lHeadL  := Len(aHeadL) > 0
	EndIf
	
	If lBuffer
		//Layout 150 posições débito automático
		If lBuffer .And. (nMaxLn >= 150 .And. nMaxLn <= 152)
			cHeader := Substr(cBuffer, 1, 1)
		EndIf		
		
		//Lendo no Header de Lote o Banco, Agencia e Conta para baixa
		If (cHeader == "A") .Or. (cTipoReg == "1" .And. lHeadL .And. cHeader != "F")
			For nCntFor := 1 To Len(aHeadL)
				If aHeadL[nCntFor,5]
					nPosIni := aHeadL[nCntFor,2]
					nTamanho:= aHeadL[nCntFor,3]
					nDecimal:= aHeadL[nCntFor,4]
					Do Case
					Case aHeadL[nCntFor,1]=="BANCO"
						xBANCO	:= SubStr(cBuffer,nPosIni,nTamanho)
						aBanco[1] := xBANCO
					Case aHeadL[nCntFor,1]=="AGENCIA"
						xAGENCIA	:= SubStr(cBuffer,nPosIni,nTamanho)
						aBanco[2] := xAGENCIA
					Case aHeadL[nCntFor,1]=="CONTA"
						xCONTA	:= SubStr(cBuffer,nPosIni,nTamanho)
						aBanco[3] := xCONTA
					Case aHeadL[nCntFor,1]=="CGCEMP"
						xCGCEMP	:= SubStr(cBuffer,nPosIni,nTamanho)
					EndCase
				EndIf
			Next
			__aLayCNAB[5] := aClone( aBanco )
		Else
			//Recarrego os dados bancarios quando estiver processando o detalhe
			//Esses dados estao apenas no header e somente serao trocados quando
			//lido um novo header
			If Empty(xBanco) .and. !Empty(aBanco[1])
				xBanco	:= aBanco[1]
				xAgencia := aBanco[2]
				xConta	:= aBanco[3]
			Endif

			// Posição do SEGMENTO J52
			nPosJ52 := Ascan(aSegmento,{|x| x[2] = "J52" })
			lReadJ  := Ascan(aReadSeg, {|x| x == "J" }) > 0

			// Busca o segmento da linha atual no array(aSegmento)
			For nCntFor := 1 To Len(aSegmento)
				If Empty(cSegmento)
					cSegmento := If(SubStr(cBuffer,aSegmento[nCntFor,3],aSegmento[nCntFor,4]) == aSegmento[nCntFor,2], aSegmento[nCntFor,2],"")
				ElseIf cSegmento == "J" .And. lReadJ .And. nPosJ52 != 0 .And. nPosJ52 == nCntFor // Verifica se existe SEGMENTO J52 (Opicional)
					cSeg52 := Alltrim(SubStr(cBuffer,aSegmento[nCntFor,3],aSegmento[nCntFor,4])) + SubStr(cBuffer,aSegmento[nCntFor,5],aSegmento[nCntFor,6])
					cSegmento := If(cSeg52 == aSegmento[nPosJ52,2], aSegmento[nCntFor,2],cSegmento)
				EndIf
			Next
			
			// Caso o segmento ja foi processado por uma linha do arquivo de
			// retorno, saio da função com os dados carregados até o momento.
			If !Empty(cSegmento) .And. aScan(aReadSeg, {|x| x == cSegmento}) > 0
				
				// Retorna a linha atual para ser relida na proxima interacao.
				nLinRead--
				FSeek(nHandle,-2*(nLidosBco),1)
				cBuffer := LerLinha(nHandle,nMaxLn)[1]
				lContinua := .F.
				Exit
			ElseIf !Empty(cSegmento)
				AADD(aReadSeg,cSegmento)
			EndIf

			For nCntFor := 1 To Len(aSegmento)
				//-----------------------------------------------------------------
				//                      Teste de Quebra
				//  1D(n)
				//  ------------------------------
				//  |(n)-------------------------  -> Linha Detalhe  =  Conj.
				//  | 1 |------------------------A - Identificador    | da
				//  | 2 |------------------------B - Identificador    | Linha
				//  | 3 |------------------------C - Identificador    | Detalhe
				//  |   -------------------------                    =
				//  |
				//  ------------------------------
				//  2D(n)
				//  ------------------------------
				//  |(n)-------------------------  -> Linha Detalhe  =  Conj.
				//  | 1 |------------------------A - Identificador    | da
				//  | 2 |------------------------B - Identificador    | Linha
				//  | 3 |------------------------C - Identificador    | Detalhe
				//  |   -------------------------                    =
				//  |
				//  ------------------------------
				//
				//-----------------------------------------------------------------
				xConteudo  := Alltrim(SubStr(cBuffer,aSegmento[nCntFor,3],aSegmento[nCntFor,4]))
				If ( nPosj52 ) > 0
					If !Empty(cSeg52)
					 	If nCntFor == nPosj52
							xContOpt   := SubStr(cBuffer,aSegmento[nCntFor,5],aSegmento[nCntFor,6])
	                
							If !Empty(xContOpt) .And. xContOpt == "52"
								xConteudo := Alltrim( xConteudo ) + xContOpt
							EndIf
						Else
							xConteudo  := ""
						EndIf
					EndIf
				EndIf
				
				// Verifica a qual linha detalhe o segmento valido pertence.
				If If( nPosj52 > 0, ( xConteudo == aSegmento[nCntFor,2] ), ( xConteudo $ aSegmento[nCntFor,2] ) )
					cLinAtu := SubStr(aSegmento[nCntFor][1],1,1)
				EndIf

				// Verifica se houve quebra de linha detalhe, ou se o houve repeticao do mesmo conjunto da linha detalhe. 
				// A repeticao ocorre quando o identificador de linha repete-se.
				If ( (cIdent == xConteudo .Or. cLinAtu<>cLinUlt ) .And. ;
					 !Empty(cIdent) .And. !Empty(cLinUlt) .And. nLeitura > 1 ) //.And.;

					// Retorna a linha atual para ser relida na proxima interacao.
					nLinRead--
					FSeek(nHandle,-2*(nLidosBco),1)
					cBuffer := LerLinha(nHandle,nMaxLn)[1]
					lContinua := .F.
					Exit
				EndIf
				If ( lContinua )
					If If( nPosj52 > 0, xConteudo == aSegmento[nCntFor,2], xConteudo $ aSegmento[nCntFor,2] )
						lSegValido := .T.
						xBuffer    += cBuffer
						Aadd(aBuffer,cBuffer)
						If (Empty(cIdent))
							nLeitura := 1
							cIdent 	:= xConteudo
							cLinUlt := SubStr(aSegmento[nCntFor][1],1,1)
						EndIf
						For nCntFor2 := 1 To Len(aDetalhe[nCntFor])
							nPosIni := aDetalhe[nCntFor,nCntFor2,2]
							nTamanho:= aDetalhe[nCntFor,nCntFor2,3]
							nDecimal:= aDetalhe[nCntFor,nCntFor2,4]
							Do Case
							Case aDetalhe[nCntFor,nCntFor2,1]=="TITULO"
								xTITULO := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="NOSSONUMERO"
								xNOSSONUM := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="ESPECIE"
								xTIPO     := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="OCORRENCIA"
								xOCORRENCI := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="DATA"
								xDATA := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="VALOR"
								xVALOR := SubStr(cBuffer,nPosIni,nTamanho)
								xVALOR := Val(xVALOR)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="DESPESA"
								xDESPESA := SubStr(cBuffer,nPosIni,nTamanho)
								xDESPESA := Val(xDESPESA)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="DESCONTO"
								xDESCONTO := SubStr(cBuffer,nPosIni,nTamanho)
								xDESCONTO := Val(xDESCONTO)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="ABATIMENTO"
								xABATIMENT := SubStr(cBuffer,nPosIni,nTamanho)
								xABATIMENT := Val(xABATIMENT)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="JUROS"
								xJUROS := SubStr(cBuffer,nPosIni,nTamanho)
								xJUROS := Val(xJUROS)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="MULTA"
								xMULTA := SubStr(cBuffer,nPosIni,nTamanho)
								xMULTA := Val(xMULTA)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="OUTROSCREDITOS"
								xValCC := SubStr(cBuffer,nPosIni,nTamanho)
								xValCC := Val(xValCC)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="IOF"
								xValIof := SubStr(cBuffer,nPosIni,nTamanho)
								xValIof := Val(xValIof)/(Val("1"+Repl("0",nDecimal)))
							Case aDetalhe[nCntFor,nCntFor2,1]=="DATACREDITO"
								xDATACRED := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="MOTIVO"
								xMOTIVO := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="RESERVADO"
								xRESERVADO:= SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="AUTENTICACAO"
								xAUTENTICA := SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="CGC"
								xCGC:= SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="CGCH"
								xCGCH:= SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="CODBAR"
								xCODBAR:= SubStr(cBuffer,nPosIni,nTamanho)
							Case aDetalhe[nCntFor,nCntFor2,1]=="IDENT REG OPCIO"
								xIdent:= SubStr(cBuffer,nPosIni,nTamanho)
							EndCase
						Next
					EndIf
				EndIf
			Next nCntFor
			cSeg52 := ""
			If ( !lSegValido .And. !Empty(cIdent) )
				lContinua := .F.
			EndIf
		Endif
	Else
		lContinua := .F.
	EndIf
EndDo
Return({	xTITULO,xTIPO,xOCORRENCI,xDATA,xVALOR,;
			xDESPESA,xDESCONTO,xABATIMENT,xJUROS,xMULTA,;
			xNOSSONUM,xValIof,xValCC,xDATACRED,xMOTIVO,;
			xRESERVADO,xBuffer,xAUTENTICA,aBuffer,xCGC,;
			xBanco,xAgencia,xConta,xCGCH,xCODBAR, xCGCEMP})


Static Function LerLinha(nHandle,nMaxLn)
Local cString	:= ""
Local nTotLidos	:= 0
Local lCRLF		:= .T.

Default nMaxLn := 1000

cString := Space(nMaxLn)
FReadLn(nHandle, @cString, nMaxLn, @lCRLF) // Le uma linha ate CR+LF.

//Se a linha possuir CRLF no seu final
If lCRLF
	nTotLidos := Len(cString)+2
//Se a linha NAO possuir CRLF no seu final
Else
	nTotLidos := Len(cString)
Endif

Return {cString,nTotLidos}
